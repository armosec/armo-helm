{{- $cloud_provider := (include "cloud_provider" .) -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Values.armoKubescape.name }}-post-install-hook
  namespace: {{ .Values.armoNameSpace }}
  labels:
    app: {{ .Values.armoKubescape.name }}-post-install-hook
    tier: {{ .Values.global.namespaceTier }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded  
spec:
  template:
    spec:
      containers:
      - name: kubescape
        image: "{{ .Values.armoKubescape.image.repository }}:{{ .Values.armoKubescape.image.tag }}"
        imagePullPolicy: {{ .Values.armoKubescape.image.pullPolicy }}
        env:
        - name: KS_DEFAULT_CONFIGMAP_NAME
          value: "{{ .Values.armoKubescape.name }}-config"
        - name: KS_DEFAULT_CONFIGMAP_NAMESPACE
          value: "{{ .Values.armoNameSpace }}"
        {{- if $cloud_provider }}
        - name: KS_CLOUD_PROVIDER
          value: "{{ $cloud_provider }}"
        - name: KS_CLOUD_REGION
          value: "{{ .Values.cloudRegion }}"
        - name: KS_KUBE_CLUSTER
          value: "{{ .Values.clusterName }}"
        {{- if eq "gke" $cloud_provider }}
        - name: KS_GKE_PROJECT
          value: "{{ .Values.gkeProject }}"
        {{- end -}}
        {{- end }}        
        command:
        - kubescape
        args:  
        - scan
        - --submit
        - --logger
        - debug
        {{ if .Values.armoKubescape.enableHostScan }}
        - --enable-host-scan
        {{ end }}
        {{ if eq .Values.environment "dev" }}
        - --environment=dev
        {{ end }}
        {{ if eq .Values.environment "staging" }}
        - --environment=staging
        {{ end }}
        resources:
{{ toYaml .Values.armoKubescape.resources | indent 10 }}             
        volumeMounts:
        - name: kubescape-config-volume
          mountPath: /root/.kubescape/config.json
          subPath: config.json
      restartPolicy: OnFailure
      serviceAccountName: {{ .Values.global.armoKubescapeServiceAccountName }}
      automountServiceAccountToken: true
      volumes:
      - name: kubescape-config-volume
        configMap:
          name: {{ .Values.armoKubescape.name }}-config
