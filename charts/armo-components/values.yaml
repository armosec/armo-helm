# Default values for armo operator.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

armoNameSpace: armo-system
appLabel: armo-vuln-scanner
registrySecretName: armoregcred
loginSecretName: armo-login
createKubescapeServiceAccount: true


# ARMO BE URLs
environment: "prod"
eventReceiverHttpUrl: "https://report.armo.cloud"
k8sReportUrl: "wss://report.armo.cloud"
postmanUrl: "postman.euprod1.cyberarmorsoft.com"
masterNotificationService: "ens.euprod1.cyberarmorsoft.com"
backendOpenAPI: "https://api.armo.cloud/api"
# ARMO DEV BE URLs
devEventReceiverHttpUrl: "https://report.eudev3.cyberarmorsoft.com"
devPostmanUrl: "postman.eudev3.cyberarmorsoft.com"
devK8sReportUrl: "wss://report.eudev3.cyberarmorsoft.com"
devMasterNotificationService: "ens.eudev3.cyberarmorsoft.com"
devBackendOpenAPI: "https://api-dev.armo.cloud/api"
# ARMO STAGING BE URLs
stagingEventReceiverHttpUrl: "https://report.eustage2.cyberarmorsoft.com"
stagingPostmanUrl: "postman.eustage2.cyberarmorsoft.com"
stagingK8sReportUrl: "wss://report.eustage2.cyberarmorsoft.com"
stagingMasterNotificationService: "ens.eustage2.cyberarmorsoft.com"
stagingBackendOpenAPI: "https://api-stage.armo.cloud/api"
 
# Customer Specific Data
# accountGuid is deliberately not defined here and it should be defined by the user
# clusterName: "" // cluster name must be defined by the user
clientID: ""
secretKey: ""


# Cloud support
cloud_provider_engine:
cloudRegion:
aws_iam_role_arn:
gke_service_account:
gkeProject:

loginInfo:
  username: ""
  password: ""
  customer: ""


nameOverride: ""
fullnameOverride: ""

global:
  armoSystemMode: "SCAN"
  namespaceTier: armo-system-control-plane
  beConfig: armo-be-config
  armoServiceAccountName: armo-scanner-service-account
  armoKubescapeServiceAccountName: armo-kubescape-service-account


armoScanScheduler:

  ## Schedule Scan using cron
  ##
  enabled: true

  ## scan scheduler container name
  ##
  name: armo-scan-scheduler

           # -- Frequency of running the scan
           #     ┌───────────── minute (0 - 59)
           #     │ ┌───────────── hour (0 - 23)
           #     │ │ ┌───────────── day of the month (1 - 31)
           #     │ │ │ ┌───────────── month (1 - 12)
           #     │ │ │ │ ┌───────────── day of the week (0 - 6) (Sunday to Saturday;
           #     │ │ │ │ │                         7 is also Sunday on some systems)
           #     │ │ │ │ │
           #     │ │ │ │ │
           #     * * * * *
  scanSchedule: "0 0 * * *"
  
  image:
    repository: curlimages/curl
    tag: latest
    pullPolicy: IfNotPresent

  replicaCount: 1

armoKubescapeScanScheduler:

  ## Schedule Scan using cron
  ##
  enabled: true

  ## scan scheduler container name
  ##
  name: armo-kubescape-scheduler

           # -- Frequency of running the scan
           #     ┌───────────── minute (0 - 59)
           #     │ ┌───────────── hour (0 - 23)
           #     │ │ ┌───────────── day of the month (1 - 31)
           #     │ │ │ ┌───────────── month (1 - 12)
           #     │ │ │ │ ┌───────────── day of the week (0 - 6) (Sunday to Saturday;
           #     │ │ │ │ │                         7 is also Sunday on some systems)
           #     │ │ │ │ │
           #     │ │ │ │ │
           #     * * * * *
  scanSchedule: "0 0 * * *"
  
  image:
    # source code - https://github.com/armosec/http-request
    repository: quay.io/armosec/http_request
    tag: 	v0.0.5
    pullPolicy: IfNotPresent

  replicaCount: 1

armoKubescape:
  name: armo-kubescape

  # source code: https://github.com/armosec/kubescape/tree/master/httphandler
  image:
    repository: quay.io/armosec/kubescape
    tag: v2.0.153
    pullPolicy: Always

  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    requests:
       cpu: 10m
       memory: 100Mi
    limits:
       cpu: 500m
       memory: 500Mi

  enableHostScan: true
  downloadArtifacts: true
  skipUpdateCheck: false
  submit: true
  replicaCount: 1

  service:
    type: ClusterIP
    port: 8080

armoWebsocket:

  ## Deploy WebSocket
  ##
  enabled: true
  replicaCount: 1

  ## armo websocket container name
  ##
  name: armo-web-socket

  # source code: https://github.com/armosec/k8s-ca-websocket
  image:
    repository: quay.io/armosec/action-trigger
    tag: v0.0.6
    pullPolicy: Always

  service:
    type: ClusterIP
    port: 4002
    targetPort: 4002
    protocol: TCP

  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    requests:
       cpu: 50m
       memory: 100Mi
    limits:
       cpu: 100m
       memory: 300Mi


  env: {}

  labels: {}


armoVulnScanner:

  ## Deploy WebHook
  ##
  enabled: true

  ## armo websocket container name
  ##
  name: armo-vuln-scan

  ## armo webhook container image
  ## source code: https://github.com/armosec/ca-vuln-scan
  image:
    repository: quay.io/armosec/images-vulnerabilities-scan
    tag: v0.0.7
    pullPolicy: Always

  replicaCount: 1

  service:
    type: ClusterIP
    port: 8080
    targetPort: 8080
    protocol: TCP

  resources:
    requests:
       cpu: 300m
       memory: 2500Mi
       # Consider to increase ephemeral-storage requests in order to avoid pod eviction due to huge images
       # More details: https://hub.armo.cloud/docs/limitations
       #               https://github.com/armosec/kubescape/issues/389
       ephemeral-storage: 20Gi
    limits:
       cpu: 1500m
       memory: 5000Mi
       ephemeral-storage: 50Gi

  env:
  - name: CA_MAX_VULN_SCAN_ROUTINS
    value: "1"

  labels: {}

armoCollector:
  enabled: true

  ## armo collector container name
  name: armo-collector

  # source code: https://github.com/armosec/k8s-armo-collector
  image:
    repository: quay.io/armosec/cluster-collector
    tag: v0.0.9
    pullPolicy: Always

  replicaCount: 1
  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    requests:
       cpu: 10m
       memory: 40Mi
    limits:
       cpu: 500m
       memory: 500Mi


  env:
  - name: PRINT_REPORT
    value: "false"


  labels: {}

# 
armoNotificationService:
  enabled: true

  ## armo notification-service container name
  name: armo-notification-service

  websocketService:
    type: ClusterIP
    port: 8001
    targetPort: 8001
    protocol: TCP

  httpService:
    type: ClusterIP
    port: 8002
    targetPort: 8002
    protocol: TCP
  
  # source code: https://github.com/armosec/capostman
  image:
    repository: quay.io/armosec/notification-server
    tag: v0.0.3
    pullPolicy: Always

  replicaCount: 1
  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    requests:
       cpu: 10m
       memory: 10Mi
    limits:
       cpu: 100m
       memory: 50Mi


  env: {}
    


  labels: {}
