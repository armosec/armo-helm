# Default values for armo operator.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

armoNameSpace: armo-system
appLabel: armo-vuln-scanner
loginSecretName: armo-login
createKubescapeServiceAccount: true

# -- enable/disable revision label
addRevisionLabel: true

# ARMO BE URLs
environment: "prod"
eventReceiverHttpUrl: "https://report.armo.cloud"
k8sReportUrl: "wss://report.armo.cloud"
gateway: "ens.euprod1.cyberarmorsoft.com"
backendOpenAPI: "https://api.armosec.io/api"
# ARMO DEV BE URLs
devEventReceiverHttpUrl: "https://report.eudev3.cyberarmorsoft.com"
devK8sReportUrl: "wss://report.eudev3.cyberarmorsoft.com"
devGateway: "ens.eudev3.cyberarmorsoft.com"
devBackendOpenAPI: "https://api-dev.armosec.io/api"
# ARMO STAGING BE URLs
stagingEventReceiverHttpUrl: "https://report-ks.eustage2.cyberarmorsoft.com"
stagingK8sReportUrl: "wss://report.eustage2.cyberarmorsoft.com"
stagingGateway: "ens.eustage2.cyberarmorsoft.com"
stagingBackendOpenAPI: "https://api-stage.armosec.io/api"

# Customer Specific Data
# accountGuid is deliberately not defined here and it should be defined by the user
# clusterName: "" // cluster name must be defined by the user

# -- client ID - https://hub.armosec.io/docs/authentication
clientID: ""

# -- secret key - https://hub.armosec.io/docs/authentication
secretKey: ""

# cloud support

# -- cloud provider engine
cloud_provider_engine:

# -- cloud region
cloudRegion:

# -- AWS IAM arn role
aws_iam_role_arn:

# -- GKE service account
gke_service_account:

# -- GKE project
gkeProject:

nameOverride: ""
fullnameOverride: ""

# -- enable/disable trigger image scan for new images
triggerNewImageScan: false

# Additional volumes applied to all containers
volumes: []

# Additional volumeMounts applied to all containers
volumeMounts: []

global:
  namespaceTier: armo-system-control-plane
  beConfig: armo-be-config
  armoServiceAccountName: armo-scanner-service-account
  armoKubescapeServiceAccountName: armo-kubescape-service-account

# kubescape scheduled scan using a CronJob
armoKubescapeScanScheduler:

  # -- enable/disable a kubescape scheduled scan using a CronJob
  enabled: true

  # scan scheduler container name
  name: armo-kubescape-scheduler

           # -- Frequency of running the scan
           #     ┌───────────── minute (0 - 59)
           #     │ ┌───────────── hour (0 - 23)
           #     │ │ ┌───────────── day of the month (1 - 31)
           #     │ │ │ ┌───────────── month (1 - 12)
           #     │ │ │ │ ┌───────────── day of the week (0 - 6) (Sunday to Saturday;
           #     │ │ │ │ │                         7 is also Sunday on some systems)
           #     │ │ │ │ │
           #     │ │ │ │ │
           #     * * * * *
  # -- scan schedule frequency
  scanSchedule: "0 8 * * *"

  image:
    # -- source code: https://github.com/armosec/http-request (public repo)
    repository: quay.io/armosec/http_request
    tag: 	v0.0.7
    pullPolicy: IfNotPresent

  replicaCount: 1

  # Additional volumes to be mounted on the scan scheduler
  volumes: []

  # Additional volumeMounts to be mounted on the scan scheduler
  volumeMounts: []

  resources:
    requests:
        cpu: 50m
        memory: 100Mi
    limits:
        cpu: 300m
        memory: 300Mi

# kubescape scanner - https://github.com/armosec/kubescape
armoKubescape:

  # -- enable/disable kubescape scanning
  enabled: true

  name: armo-kubescape

  image:
    # -- source code: https://github.com/armosec/kubescape/tree/master/httphandler (public repo)
    repository: quay.io/armosec/kubescape
    tag: v2.0.165
    pullPolicy: Always

  resources:
    requests:
       cpu: 10m
       memory: 100Mi
    limits:
       cpu: 500m
       memory: 500Mi

  # -- enable host scanner feature: https://hub.armosec.io/docs/host-sensor
  enableHostScan: true

  # -- download policies every scan, we recommend it should remain true, you should change to 'false' when running in an air-gapped environment or when scanning with high frequency (when running with Prometheus)
  downloadArtifacts: true

  # -- skip check for a newer version
  skipUpdateCheck: false

  # -- submit results to ARMO SaaS: https://cloud.armosec.io/
  submit: true

  replicaCount: 1

  service:
    type: ClusterIP
    port: 8080

  # deploy a service monitor for prometheus (operator) integration
  serviceMonitor:

    # -- enable/disable service monitor for prometheus (operator) integration
    enabled: false

    # If needed the service monitor can be deployed to a different namespace than the one armoKubescape is in
    #namespace: my-namespace

  # Additional volumes to be mounted on Kubescape
  volumes: []

  # Additional volumeMounts to be mounted on Kubescape
  volumeMounts: []

# armoWebsocket will trigger kubescape and image vulnerability scanning
armoWebsocket:

  # -- enable/disable kubescape and image vulnerability scanning
  enabled: true

  replicaCount: 1

  # armo websocket container name
  name: armo-web-socket

  image:
    # -- source code: https://github.com/kubescape/kontroller
    repository: quay.io/kubescape/kontroller
    tag: v0.0.61
    pullPolicy: Always

  service:
    type: ClusterIP
    port: 4002
    targetPort: 4002
    protocol: TCP

  resources:
    requests:
       cpu: 50m
       memory: 100Mi
    limits:
       cpu: 300m
       memory: 300Mi
  env: {}
  labels: {}

  # Additional volumes to be mounted on the websocket
  volumes: []

  # Additional volumeMounts to be mounted on the websocket
  volumeMounts: []

armoVulnScanScheduler:

  ## Schedule Scan using cron
  ##
  enabled: true

  ## scan scheduler container name
  ##
  name: armo-vulnscan-scheduler

           # -- Frequency of running the scan
           #     ┌───────────── minute (0 - 59)
           #     │ ┌───────────── hour (0 - 23)
           #     │ │ ┌───────────── day of the month (1 - 31)
           #     │ │ │ ┌───────────── month (1 - 12)
           #     │ │ │ │ ┌───────────── day of the week (0 - 6) (Sunday to Saturday;
           #     │ │ │ │ │                         7 is also Sunday on some systems)
           #     │ │ │ │ │
           #     │ │ │ │ │
           #     * * * * *
  scanSchedule: "0 0 * * *"

  image:
    # source code - https://github.com/armosec/http-request
    repository: quay.io/armosec/http_request
    tag: 	v0.0.7
    pullPolicy: IfNotPresent

  replicaCount: 1

  # Additional volumes to be mounted on the vuln scan scheduler
  volumes: []

  # Additional volumeMounts to be mounted on the vuln scan scheduler
  volumeMounts: []

  resources:
    requests:
        cpu: 50m
        memory: 100Mi
    limits:
        cpu: 300m
        memory: 300Mi

# image vulnerability scanning microservice
armoVulnScanner:

  # -- for enable:"<any-value>", for disable:"": the print of json posted to the backend from the vuln scanner
  verbose: ""

  # -- enable/disable image vulnerability scanning
  enabled: true

  # armo websocket container name
  name: armo-vuln-scan

  image:
    # -- source code: https://github.com/kubescape/kubevuln
    repository: quay.io/kubescape/kubevuln
    tag: v0.0.43
    pullPolicy: Always

  replicaCount: 1

  service:
    type: ClusterIP
    port: 8080
    targetPort: 8080
    protocol: TCP

  resources:
    requests:
       cpu: 300m
       memory: 2500Mi
       # Consider to increase ephemeral-storage requests in order to avoid pod eviction due to huge images
       # More details: https://hub.armosec.io/docs/limitations
       #               https://github.com/armosec/kubescape/issues/389
       ephemeral-storage: 20Gi
    limits:
       cpu: 1500m
       memory: 5000Mi
       ephemeral-storage: 50Gi

  env:
  - name: CA_MAX_VULN_SCAN_ROUTINS
    value: "1"

  labels: {}

  # Additional volumes to be mounted on the vulnerability scanning microservice
  volumes: []

  # Additional volumeMounts to be mounted on the vulnerability scanning microservice
  volumeMounts: []

# armoCollector will collect the data only in the armo-system namespace and report the data to the ARMO SaaS. This is to enable onDemand scanning and for creating/editing/deleting scheduled scans from the ARMO SaaS
armoCollector:

  # -- enable/disable the armoCollector
  enabled: true

  # armo collector container name
  name: armo-collector

  image:
    # -- source code: https://github.com/kubescape/kollector
    repository: quay.io/kubescape/kollector
    tag: v0.0.27
    pullPolicy: Always

  replicaCount: 1

  resources:
    requests:
       cpu: 10m
       memory: 40Mi
    limits:
       cpu: 500m
       memory: 500Mi


  env:
  # -- print in verbose mode (print all reported data)
  - name: PRINT_REPORT
    value: "false"


  labels: {}

  # Additional volumes to be mounted on the collector
  volumes: []

  # Additional volumeMounts to be mounted on the collector
  volumeMounts: []

# armoNotificationService pass notifications from ARMO SaaS to the armo-web-socket microservice. The notifications are the onDemand scanning and the scanning schedule settings
armoNotificationService:

  # -- enable/disable passing notifications from ARMO SaaS to the armo-web-socket microservice. The notifications are the onDemand scanning and the scanning schedule settings
  enabled: true

  # armo notification-service container name
  name: armo-notification-service

  websocketService:
    type: ClusterIP
    port: 8001
    targetPort: 8001
    protocol: TCP

  httpService:
    type: ClusterIP
    port: 8002
    targetPort: 8002
    protocol: TCP

  image:
    # -- source code: https://github.com/kubescape/gateway
    repository: quay.io/kubescape/gateway
    tag: v0.0.14
    pullPolicy: Always

  replicaCount: 1
  resources:
    requests:
       cpu: 10m
       memory: 10Mi
    limits:
       cpu: 100m
       memory: 50Mi

  env: {}
  labels: {}

  # Additional volumes to be mounted on the notification-service
  volumes: []

  # Additional volumeMounts to be mounted on the notification-service
  volumeMounts: []

armoKubescapeHostScanner:
  # Additional volumes to be mounted on the Kubescape host scanner
  volumes: []

  # Additional volumeMounts to be mounted on the Kubescape host scanner
  volumeMounts: []

# registry scan scheduled scan using a CronJob
armoRegistryScanScheduler:

  # -- enable/disable a kubescape scheduled scan using a CronJob
  enabled: true

  # scan scheduler container name
  name: armo-registry-scheduler

           # -- Frequency of running the scan
           #     ┌───────────── minute (0 - 59)
           #     │ ┌───────────── hour (0 - 23)
           #     │ │ ┌───────────── day of the month (1 - 31)
           #     │ │ │ ┌───────────── month (1 - 12)
           #     │ │ │ │ ┌───────────── day of the week (0 - 6) (Sunday to Saturday;
           #     │ │ │ │ │                         7 is also Sunday on some systems)
           #     │ │ │ │ │
           #     │ │ │ │ │
           #     * * * * *
  # -- scan schedule frequency
  scanSchedule: "0 0 * * *"

  image:
    # -- source code: https://github.com/armosec/http-request (public repo)
    repository: quay.io/armosec/http_request
    tag: 	v0.0.7
    pullPolicy: IfNotPresent

  replicaCount: 1

  # Additional volumes to be mounted on the scan scheduler
  volumes: []

  # Additional volumeMounts to be mounted on the scan scheduler
  volumeMounts: []
